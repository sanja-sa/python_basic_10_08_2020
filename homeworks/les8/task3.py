"""
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. 
Проверить работу исключения на реальном примере. 
Необходимо запрашивать у пользователя данные и заполнять список. 
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. 
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”. 
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. 
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число. 
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. 
При этом работа скрипта не должна завершаться.
"""


class OnlyDigitException(Exception):
    """
    Класс исключений с проверками значений
    """
    @staticmethod
    def is_string_digit(value):
        if not value.isdigit():
            raise OnlyDigitException("Можно только цифры")

    @staticmethod
    def is_digit(value):
        if type(value) not in [float, int]:
            raise OnlyDigitException("Можно только цифры")
        

if __name__ == "__main__":
    list_items = []
    while True:
        digit = input("Введите число для списка: ")
        if digit == "stop":
            break
        try:
            OnlyDigitException.is_string_digit(digit)
            digit = int(digit)
            list_items.append(digit)
        except OnlyDigitException as err:
            print(err)
    print(f'{list_items}')

